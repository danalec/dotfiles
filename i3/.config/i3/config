#                             ████ ██        
#                            ░██░ ░░   █████ 
#  █████   ██████  ███████  ██████ ██ ██░░░██
# ██░░░██ ██░░░░██░░██░░░██░░░██░ ░██░██  ░██
#░██  ░░ ░██   ░██ ░██  ░██  ░██  ░██░░██████
#░██   ██░██   ░██ ░██  ░██  ░██  ░██ ░░░░░██
#░░█████ ░░██████  ███  ░██  ░██  ░██  █████ 
# ░░░░░   ░░░░░░  ░░░   ░░   ░░   ░░  ░░░░░  
#
# ░ author ░ Dan Alec <danalec@gmail.com>
# ░  code  ░ https://github.com/danalec/dotfiles
#
# ~danalec/.config/i3/config
# last modified : 2017-03-10
#
#█▓▒░ 修正、改変、再配布何でも可 ░▒▓█
#
# this config file depends on the following programs:
# - PulseAudio (sound)
# - systemd (energy management)
# - Nitrogen (wallpaper)
# - i3lock/Scrot/imagemagick/xautolock (lockscreen)
# - dunst (notification)
# - rofi (launcher)
# - py3status (status bar)

# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# default applications
set $terminal termite -d "`xcwd`"
#set $coolterminal cool-retro-term --workdir "`xcwd`"
set $browser chromium
set $file_manager dolphin --platformtheme qt5ct "`xcwd`"
set $lock_screen "$HOME/.config/i3/scripts/venv/bin/python \
$HOME/.config/i3/scripts/lock_screen.py"
set $set_wallpaper nitrogen --restore
set $fs_screenshot "scrot `xdg-user-dir PICTURES`/%Y-%m-%d-%T-screenshot.png"

# i3pystatus path
set $status_bar "$HOME/.config/i3pystatus/venv/bin/python \
$HOME/.config/i3pystatus/config.py"

# using Super (Win key) instead of Alt
set $mod Mod4

# alias Alt key
set $alt Mod1

# Font for window titles and i3-status
font pango:Roboto Condensed, FontAwesome 8

# disable window title
for_window [class="^.*"] border pixel 1

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# disable mouse focus
focus_follows_mouse no

# start a terminal
bindsym $mod+Return exec $terminal
#bindsym $mod+Shift+Return exec $coolterminal

# start a browser
bindsym $mod+n exec $browser

# start file manager
bindsym $mod+m exec $file_manager

# kill focused window
bindsym $mod+Shift+q kill
bindsym $alt+F4 kill

# start rofi in dmenu mode
bindsym $mod+d exec rofi -show run
bindsym $mod+x exec rofi -show window

# change focus
# vi-like
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# allow returning to previous workspace
workspace_auto_back_and_forth yes

# move focused window
# vi-like
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move workspace to another window
bindsym $mod+Shift+m move workspace to output left

# split in [v]ertical orientation
bindsym $mod+v split v

# split in h[o]rizontal orientation
bindsym $mod+o split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+z focus child

# workspace names
# font awesome
set $ws1  "1:  "
set $ws2  "2:  "
set $ws3  "3:  "
set $ws4  "4:  "
set $ws5  "5:  "
set $ws6  "6:  "
set $ws7  "7:  "
set $ws8  "8:  "
set $ws9  "9:  "
set $ws10 "10:  "
set $ws11 "11:  "
set $ws12 "12:  "
set $ws13 "13:  "
set $ws14 "14:  "
set $ws15 "15:  "
set $ws16 "16:  "
set $ws17 "17:  "
set $ws18 "18:  "
set $ws19 "19:  "
set $ws20 "20:  "

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym Ctrl+$mod+1 workspace $ws11
bindsym Ctrl+$mod+2 workspace $ws12
bindsym Ctrl+$mod+3 workspace $ws13
bindsym Ctrl+$mod+4 workspace $ws14
bindsym Ctrl+$mod+5 workspace $ws15
bindsym Ctrl+$mod+6 workspace $ws16
bindsym Ctrl+$mod+7 workspace $ws17
bindsym Ctrl+$mod+8 workspace $ws18
bindsym Ctrl+$mod+9 workspace $ws19
bindsym Ctrl+$mod+0 workspace $ws20

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym Ctrl+$mod+Shift+1 move container to workspace $ws11
bindsym Ctrl+$mod+Shift+2 move container to workspace $ws12
bindsym Ctrl+$mod+Shift+3 move container to workspace $ws13
bindsym Ctrl+$mod+Shift+4 move container to workspace $ws14
bindsym Ctrl+$mod+Shift+5 move container to workspace $ws15
bindsym Ctrl+$mod+Shift+6 move container to workspace $ws16
bindsym Ctrl+$mod+Shift+7 move container to workspace $ws17
bindsym Ctrl+$mod+Shift+8 move container to workspace $ws18
bindsym Ctrl+$mod+Shift+9 move container to workspace $ws19
bindsym Ctrl+$mod+Shift+0 move container to workspace $ws20

# move workspaces to another monitor
# vi-like
bindsym Ctrl+$alt+h move workspace to output left
bindsym Ctrl+$alt+j move workspace to output down
bindsym Ctrl+$alt+k move workspace to output up
bindsym Ctrl+$alt+l move workspace to output right
# arrow keys
bindsym Ctrl+$alt+Left move workspace to output left
bindsym Ctrl+$alt+Down move workspace to output down
bindsym Ctrl+$alt+Up move workspace to output up
bindsym Ctrl+$alt+Right move workspace to output right

#assign
assign [class="^Pavucontrol$"] $ws12
assign [class="^Synergy$"] $ws12
assign [class="^Keepassx2$"] $ws4

#floating
#for_window [class="^Keepassx2$"] floating enable
for_window [class="Wine"] floating enable
for_window [class="Skype"] floating enable
for_window [window_role="pop-up"] floating enable

# https://github.com/ValveSoftware/steam-for-linux/issues/1040
#for_window [class="^Steam$" title="^Friends$"] floating enable
#for_window [class="^Steam$" title="Steam - News"] floating enable
#for_window [class="^Steam$" title=".* - Chat"] floating enable
#for_window [class="^Steam$" title="^Settings$"] floating enable
#for_window [class="^Steam$" title=".* - event started"] floating enable
#for_window [class="^Steam$" title=".* CD key"] floating enable
#for_window [class="^Steam$" title="^Steam - Self Updater$"] floating enable
#for_window [class="^Steam$" title="^Screenshot Uploader$"] floating enable
#for_window [class="^Steam$" title="^Steam Guard - Computer Authorization Required$"] floating enable
#for_window [title="^Steam Keyboard$"] floating enable

# scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# system power management
set $mode_system System [l]ock, [e]xit i3, [s]uspend, [h]ibernate, [R]eboot, [S]hutdown
mode "$mode_system" {
    bindsym l mode "default", exec $lock_screen
    bindsym e mode "default", exec i3-msg exit
    bindsym s mode "default", exec $lock_screen, exec sleep 1 && systemctl suspend
    bindsym h mode "default", exec $lock_screen, exec sleep 1 && systemctl hibernate
    bindsym Shift+r mode "default", exec systemctl reboot
    bindsym Shift+s mode "default", exec systemctl poweroff

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Escape mode "$mode_system"

# resize window (you can also use the mouse for that)
mode "Resize" {
    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    # vi-like
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "Resize"

# external screen management
set $display_layout_vga Display  VGA:  ,  , [o]ff
mode "$display_layout_vga" {
    bindsym Left exec xrandr --output VGA-0 --auto --left-of LVDS-0 && $set_wallpaper, mode "default"
    bindsym Right exec xrandr --output VGA-0 --auto --right-of LVDS-0 && $set_wallpaper, mode "default"
    bindsym o exec xrandr --output VGA-0 --auto --off && $set_wallpaper, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $display_layout_hdmi Display  HDMI:  ,  , [o]ff
mode "$display_layout_hdmi" {
    bindsym Left exec xrandr --output HDMI-1 --auto --left-of LVDS-0 && $set_wallpaper, mode "default"
    bindsym Right exec xrandr --output HDMI-1 --auto --right-of LVDS-0 && $set_wallpaper, mode "default"
    bindsym o exec xrandr --output HDMI-1 --auto --off && $set_wallpaper, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $display_mode Screen [v]ga, [h]dmi
mode "$display_mode" {
    bindsym v mode "$display_layout_vga"
    bindsym h mode "$display_layout_hdmi"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+p mode "$display_mode"

# start i3pystatus to display status bar
bar {
	tray_output HDMI-1
    position top
    status_command $status_bar
    # status bar color theme
    colors {
        separator #969896
        background #1d1f21
        statusline #c5c8c6
        focused_workspace #81a2be #81a2be #1d1f21
        active_workspace #373b41 #373b41 #ffffff
        inactive_workspace #282a2e #282a2e #969896
        urgent_workspace #cc6666 #cc6666 #ffffff
    }
}

# color theme
client.focused #81a2be #81a2be #1d1f21 #282a2e
client.focused_inactive #373b41 #373b41 #969896 #282a2e
client.unfocused #282a2e #282a2e #969896 #282a2e
client.urgent #373b41 #cc6666 #ffffff #cc6666

# volume control
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 1 +5% && \
notify-send -u normal -t 300 -i info '' 'volume'

bindsym XF86AudioLowerVolume exec pactl set-sink-volume 1 -5% && \
notify-send -u normal -t 300 -i info '' 'volume'

bindsym XF86AudioMute exec pactl set-sink-mute 1 toggle && \
notify-send -u normal -t 300 -i info '' 'volume'

# i don't have mute key :(
bindsym Ctrl+XF86AudioLowerVolume exec pactl set-sink-mute 1 toggle && \
notify-send -u normal -t 300 -i info '' 'volume'

# screen brightness control
#bindsym XF86KbdBrightnessUp exec "kbd_backlight up" && \
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 && \
pkill -SIGUSR1 -f $status_bar && \
notify-send -u normal -t 300 -i info '+' 'backlight'

#bindsym XF86KbdBrightnessDown exec "kbd_backlight down" && \
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 && \
pkill -SIGUSR1 -f $status_bar && \
notify-send -u normal -t 300 -i info '-' 'backlight'

# media control
bindsym XF86AudioPlay exec playerctl play-pause && \
pkill -SIGUSR1 -f $status_bar && \
notify-send -u normal -t 300 -i info ' / ' 'playerctl'


bindsym XF86AudioStop exec playerctl stop && \
pkill -SIGUSR1 -f $status_bar && \
notify-send -u normal -t 300 -i info '' 'playerctl'

bindsym XF86AudioNext exec playerctl next && \
pkill -SIGUSR1 -f $status_bar && \
notify-send -u normal -t 300 -i info '' 'playerctl'

bindsym XF86AudioPrev exec playerctl previous && \
pkill -SIGUSR1 -f $status_bar && \
notify-send -u normal -t 300 -i info '' 'playerctl'

# keyboard layout stuff
set $mode_keyboard Keyboard layout: [u]s-intl, [b]r-abnt2
mode "$mode_keyboard" {
    bindsym u mode "default", exec setxkbmap us -variant intl && \
    notify-send -u normal -t 300 -i info 'us-intl' 'keyboard'

    bindsym b mode "default", exec setxkbmap br -variant abnt2 && \
    notify-send -u normal -t 300 -i info 'br-abnt2' 'keyboard'

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+b mode "$mode_keyboard"

# take screenshots
bindsym Print exec $fs_screenshot

# monitor align
exec --no-startup-id xrandr --output HDMI-2 --right-of HDMI-1

# start compositor (since i3 does not support natively)
exec --no-startup-id compton

# restore wallpaper
exec --no-startup-id $set_wallpaper

# set keyboard map
exec --no-startup-id setxkbmap us alt-intl 

# notification manager
exec --no-startup-id dunst

# automatic lock screen if inactive
exec --no-startup-id xautolock -detectsleep -time 10 -notify 30 \
-notifier "notify-send -u normal -t 30000 -a 'xautolock' \
'Locking screen' '30 seconds remaining'" \
-corners 0-00 -locker $lock_screen &

# misc startup programs
exec --no-startup-id xmodmap ~/.xmodmap & \
notify-send -u normal -t 800 -i info 'loaded: xmodmap' 'startup'

exec --no-startup-id numlockx & \
notify-send -u normal -t 800 -i info 'loaded: numlockx' 'startup'

exec --no-startup-id insync start & \
notify-send -u normal -t 800 -i info 'loaded: insync' 'startup'

exec --no-startup-id imwheel & \
notify-send -u normal -t 800 -i info 'loaded: imwheel' 'startup'

exec --no-startup-id keybase & \
notify-send -u normal -t 800 -i info 'loaded: keybase' 'startup'

exec --no-startup-id i3-msg "workspace $ws1; exec $terminal" & \
notify-send -u normal -t 800 -i info 'loaded: terminal' 'startup'